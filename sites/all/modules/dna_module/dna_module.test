<?php

    class DnaTests extends DrupalWebTestCase
    {
        public static function getInfo()
        {
            return array(
                'name' => 'My DNA Functional Tests',
                'description' => 'Test for the DNA Module',
                'group' => 'Epicodus Example Tests',
            );
        }

        public function setUp()
        {
            parent::setUp(array('dna_checker'));
            $user = $this->drupalCreateAdminUser();
            $this->drupalLogin($user);
            $this->createTestPage();
        }

        public function createTestPage()
        {
            $info = array();
            $info['dna_letters'] = 'ACTG';
            $this->drupalPost('dna', $info, t('Find Match'));

            $path['source'] = 'node/1';
            $path['alias'] = 'pagetest';
            path_save($path);
        }

        public function drupalCreateAdminUser(array $permissions = array())
        {
            $roles = user_roles();
            $index = array_search('administrator', $roles);
            $user = $this->drupalCreateUser($permissions);
            $user->roles[$index] = 'administrator';
            return user_save($user);
        }

        public function testDnaReverse(){
            $user_input = 'ATGC';
            $form_state['values']['dna_letters'] = $user_input;
            $this->drupalPost('dna', $form_state, 'See you DNA string');
            $result = 'TACG';
            $this->assertText()
        }

    }

    class DnaTestCase extends DrupalUnitTestCase
    {
        public static function getInfo()
        {
            //Returns information about tests in this class
            return array(
                'name' => 'My DNA unit tests',
                'description' => 'Test that Dna module is working',
                'group' => 'Epicodus Example Tests',
            );
        }

        function test_dna_reverse()
        {
            //Displays desired result during test
            $description = 'A should return T';

            //Arrange
            //Create input
            $user_input = 'A';

            //Act
            $result = 'T';

            //assert
            $this->assertTrue($result, $description);

            $description = 'ACAC should return TGTG.';
            $user_input = 'ACAC';
            $result = 'TGTG';
            $this->assertTrue($result, $description);
        }
    }
